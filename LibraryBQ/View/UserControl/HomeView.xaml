<UserControl x:Class="LibraryBQ.View.HomeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:LibraryBQ.View"
             mc:Ignorable="d" 
             d:DesignHeight="380" d:DesignWidth="750"
             Background="White">
    <Grid>
        <Border Margin="100, 50, 100, 250" BorderBrush="Blue" BorderThickness="3" CornerRadius="15">
            <Grid Margin="20, 10, 10, 10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="7*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <!-- 검색어 입력용 TextBox
                    - ViewModel의 InputQueryStr 프로퍼티에 양방향 바인딩
                    - 텍스트 변경시 즉시 바인딩 업데이트 (UpdateSourceTrigger=PropertyChanged)
                    - Enter 키 입력시 HomeBookQueryCommand 커맨드 실행
                    - TextChanged 이벤트 핸들러(HomeQueryBox_TextChanged) 연결: UI 로직(입력 상태에 따른 안내문 숨김 등) 처리용
                -->
                <TextBox x:Name="HomeQueryBox" Grid.Column="0" Text="{Binding InputQueryStr, UpdateSourceTrigger=PropertyChanged}" FontSize="18" VerticalAlignment="Center" BorderBrush="Transparent" BorderThickness="0" TextChanged="HomeQueryBox_TextChanged">
                    <TextBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding HomeBookQueryCommand}" />
                    </TextBox.InputBindings>
                </TextBox>

                <!-- 검색 박스 내 위치한 플레이스홀더(힌트) 텍스트
                    - TextBox가 아닌 독립 TextBlock으로 구현하여 IsHitTestVisible="False" 처리
                      (텍스트 입력 시 사용자가 클릭해도 무시되어 입력 방해 안함)
                    - 초기 화면에서 ‘도서 통합 검색’ 안내 텍스트로서 검색어 입력 전 표시
                -->
                <TextBlock x:Name="HomeQueryPromptText" Grid.Column="0" Text="도서 통합 검색" FontSize="18" IsHitTestVisible="False" VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="Gray"/>

                <!-- 검색 실행 버튼
                    - 배경과 테두리 없이 투명하게 설정하여 깔끔한 UI 구현
                    - 클릭 시 HomeBookQueryCommand 실행
                    - 버튼 내부에 이미지 아이콘 배치
                    - 이미지 소스에 색상을 입히기 위한 Rectangle과 OpacityMask 추가
                -->
                <Button x:Name="HomeQuerybtn" Grid.Column="1" Background="Transparent" BorderBrush="Transparent" Command="{Binding HomeBookQueryCommand}">
                    <Grid>
                        <Image Source="/Image/Search_Main.png"/>
                        <!-- 이미지 소스에 색상 입히기용 직사각형 컨트롤 오버레이 -->
                        <Rectangle Stroke="Transparent" Fill="DarkGray">
                            <Rectangle.OpacityMask>
                                <ImageBrush ImageSource="/Image/Search_Main.png"/>
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Grid>
                </Button>
            </Grid>
        </Border>
    </Grid>
</UserControl>
